<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
         <context:component-scan base-package="org.doit.ik.aop3"/>
         
         <!-- namespace에서 확인, pom.xml에 모듈 추가되어있으면 있을거야 -->
         <aop:config>
         	<aop:aspect id="traceAspect" ref="logPrintProfiler3">
         	<!-- LogPrintProfiler3에 @Component주면 객체 만들어질테니까 그걸 ref에 줘 원래 ref는 객체 자리잖아 -->
         	
         	<!-- pdf 252의 AspectJ의 point cut 표현식 -->
         		<aop:around method="trace" pointcut-ref="samplePointcut"/>
         		<aop:before method="before" pointcut-ref="samplePointcut"/>
         		<aop:after method="afterFinal" pointcut-ref="samplePointcut"/>
         		<!-- org.doit.ik.aop 하위 모든 패키지의 모든 클래스, 파라미터 2개인 모든 메소드 -->
         		<aop:pointcut expression="execution(* org.doit.ik.aop..*.*(*,*))" id="samplePointcut"/>
         		<!-- interface위치를 등록한 것이기 때문에 aop로 등록해도 된다. -->
         	</aop:aspect>
         </aop:config>
   
</beans>
